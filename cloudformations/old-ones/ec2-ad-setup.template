{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "",
  "Parameters": {

    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "ClientIP": {
      "Description": "The IP address range that can be used to connect to the RDS instances and EC2 instance from your local machine.It must be a valid IP CIDR range of the form x.x.x.x/x.Pls get your address using checkip.amazonaws.com or whatsmyip.org",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "It must be a valid IP CIDR range of the form x.x.x.x/x. Suggest to enable access to your IP address only. Pls get your address using checkip.amazonaws.com or whatsmyip.org."
    },
    "WindowsEC2InstanceForADType": {
      "Description": "EC2 instance Type For Loading Test Data Into Source RDS Oracle",
      "Type": "String",
      "Default": "m4.large",
      "AllowedValues": [
        "m4.large"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    }
  },
  "Resources": {
    "resVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [{
          "Key": "Name",
          "Value": "KnoxBlogVPC"
        }]
      }
    },
    "resPublicSubnetInAZ1A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "resVPC"
        },
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": "True",
        "Tags": [{
          "Key": "Name",
          "Value": "KnoxBlogSubnetInAZ1A"
        }]
      }
    },
    "resInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{
          "Key": "Name",
          "Value": "Ora2PGInternetGateway"
        }]
      }
    },
    "resGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "resInternetGateway"
        },
        "VpcId": {
          "Ref": "resVPC"
        }
      }
    },
    "resPublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "resVPC"
        }
      }
    },
    "resPublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "resPublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "resInternetGateway"
        }
      },
      "DependsOn": [
        "resGatewayAttachment"
      ]
    },
    "resSGBase": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "ora2pgblogsecuritygroup",
        "GroupDescription": "Base Security Group",
        "VpcId": {
          "Ref": "resVPC"
        },
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "-1",
            "FromPort": -1,
            "ToPort": -1
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": {
              "Ref": "ClientIP"
            },
            "FromPort": "22",
            "ToPort": "22"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": {
              "Ref": "ClientIP"
            },
            "FromPort": "5432",
            "ToPort": "5432"
          }
        ]
      }
    },
    "resSGBaseIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "resSGBase",
            "GroupId"
          ]
        },
        "IpProtocol": "-1",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "resSGBase",
            "GroupId"
          ]
        }
      }
    },
    "resOra2PGDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet available for the RDS DB Instance.",
        "SubnetIds":[
          {
            "Ref": "resPublicSubnetInAZ1A"
          },
          {
            "Ref": "resPublicSubnetInAZ1A"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "cfn"
          }
        ]
      }
    },
    "resWindowsEC2InstanceForAD": {
      "Type": "AWS::EC2::Instance",
      "Properties": {

        "IamInstanceProfile": "myIAMRole_SSM",
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": "ami-6dd02214",
        "InstanceType": {
          "Ref": "WindowsEC2InstanceForADType"
        },
        "Tags": [ { "Key": "Name", "Value": "resWindowsEC2InstanceForAD" } ],
        "SubnetId": "subnet-1234567",
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "AssociatePublicIpAddress": "true",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "resPublicSubnetInAZ1A"
            },
            "GroupSet": [
              {
                "Ref": "resSGBase"
              }
            ]
          }
        ]
      }
    }
  }
}